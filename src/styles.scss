@forward 'styles/variables';
@use '@angular/material' as mat;
@include mat.app-background();
// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
// @use '@angular/material' as mat;

// html {
//   @include mat.theme((
//     color: (
//       primary: mat.$azure-palette,
//       tertiary: mat.$blue-palette,
//     ),
//     typography: Roboto,
//     density: 0,
//   ));

//   // Default the application to a light color theme. This can be changed to
//   // `dark` to enable the dark color theme, or to `light dark` to defer to the
//   // user's system settings.
//   color-scheme: light;

//   // Set a default background, font and text colors for the application using
//   // Angular Material's system-level CSS variables. Learn more about these
//   // variables at https://material.angular.dev/guide/system-variables
//   background-color: var(--mat-sys-surface);
//   color: var(--mat-sys-on-surface);
//   font: var(--mat-sys-body-medium);
// }/* You can add global styles to this file, and also import other style files */

/*=============== BASE ===============*/
*{
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  -webkit-tap-highlight-color: transparent;
}

html {
  @include mat.theme((
    color: (
      theme-type: light,
      primary: mat.$violet-palette,
      tertiary: mat.$orange-palette,
    )
  ));

  @include mat.button-overrides((
    filled-label-text-font: var(--button-title-font),
    filled-container-color: var(--vibrant-rose),
    filled-container-shape: 0.5rem,
    filled-label-text-weight: 600,
  ));

  @include mat.tooltip-overrides((
    container-color: var(--steel-gray)
  ))
}

html {
  font-size: 62.5%
}

body {
  font-family: var(--body-font);
  font-weight: var(--font-regular);
  font-size: var(--normal-font-size);
  color: var(--dark-slate);
}

section {
  overflow: hidden;
}

ul {
  list-style: none;
}

a {
  font-family: var(--navigation-font);
  text-decoration: none;
}

h1, h2, h3, h4, h5, h6 {
  font-family: var(--button-title-font);
  font-size: 2.5rem;
  line-height: 1.3;
}

h1, h2 {
  font-weight: var(--font-bold);
}

h3, h4, h5, h6 {
  font-weight: var(--font-semi-bold);
}

p {
  font-weight: var(--font-regular);
  font-size: 1.6rem;
  line-height: 1.8;
}

/*=============== REUSABLE CSS CLASSES ===============*/
.container {
  max-width: 1200px;
  margin: 0 auto;
}

.no-transition {
    transition: none !important;
}

/* Notification snackbar */
.notification-snackbar-wrapper {
  margin: 0 !important;
  padding: 0.8rem;
  position: absolute;
  top: 8rem;
  right: 0;

  @include mat.snack-bar-overrides((
    container-color: #1C2526,
  ));
}

.mat-mdc-snack-bar-handset .mat-mdc-snack-bar-container {
  width: 100% !important;
}

.mat-mdc-snack-bar-container .mat-mdc-snackbar-surface {
  min-width: initial !important;
}

/* Dialog */
@include mat.dialog-overrides((
  container-color: var((--pure-white))
));

//* Glightbox *//
:root {
  --plyr-color-main: var(--vibrant-rose);
}